{"version":3,"file":"index-umd.min.js","sources":["../lib/Point2D.js","../lib/Vector2D.js","../lib/Matrix2D.js"],"sourcesContent":["/**\n *   Point2D\n *\n *   @copyright 2001-2002, 2013, 2017 Kevin Lindsey\n */\n\n/**\n *  Point2D\n *\n *  @param {number} x\n *  @param {number} y\n *  @returns {Point2D}\n */\nfunction Point2D(x, y) {\n    Object.defineProperties(this, {\n        x: {\n            value: x !== undefined ? x : 0.0,\n            writable: false,\n            enumerable: true,\n            configurable: false\n        },\n        y: {\n            value: y !== undefined ? y : 0.0,\n            writable: false,\n            enumerable: true,\n            configurable: false\n        }\n    });\n}\n\n/**\n *  clone\n *\n *  @returns {Point2D}\n */\nPoint2D.prototype.clone = function() {\n    return new this.constructor(this.x, this.y);\n};\n\n/**\n *  add\n *\n *  @param {Point2D|Vector2D} that\n *  @returns {Point2D}\n */\nPoint2D.prototype.add = function(that) {\n    return new this.constructor(this.x + that.x, this.y + that.y);\n};\n\n/**\n *  subtract\n *\n *  @param { Vector2D | Point2D } that\n *  @returns {Point2D}\n */\nPoint2D.prototype.subtract = function(that) {\n    return new this.constructor(this.x - that.x, this.y - that.y);\n};\n\n/**\n *  multiply\n *\n *  @param {number} scalar\n *  @returns {Point2D}\n */\nPoint2D.prototype.multiply = function(scalar) {\n    return new this.constructor(this.x * scalar, this.y * scalar);\n};\n\n/**\n *  divide\n *\n *  @param {number} scalar\n *  @returns {Point2D}\n */\nPoint2D.prototype.divide = function(scalar) {\n    return new this.constructor(this.x / scalar, this.y / scalar);\n};\n\n/**\n *  equals\n *\n *  @param {Point2D} that\n *  @returns {boolean}\n */\nPoint2D.prototype.equals = function(that) {\n    return (this.x === that.x && this.y === that.y);\n};\n\n/**\n *  precisionEquals\n *\n *  @param {Point2D} that\n *  @param {number} precision\n *  @returns {boolean}\n */\nPoint2D.prototype.precisionEquals = function(that, precision) {\n    return (\n        Math.abs(this.x - that.x) < precision &&\n        Math.abs(this.y - that.y) < precision\n    );\n};\n\n// utility methods\n\n/**\n *  lerp\n *\n *  @param { Vector2D | Point2D } that\n *  @param {number} t\n *  @returns {Point2D}\n */\nPoint2D.prototype.lerp = function(that, t) {\n    const omt = 1.0 - t;\n\n    return new this.constructor(\n        this.x * omt + that.x * t,\n        this.y * omt + that.y * t\n    );\n};\n\n/**\n *  distanceFrom\n *\n *  @param {Point2D} that\n *  @returns {number}\n */\nPoint2D.prototype.distanceFrom = function(that) {\n    const dx = this.x - that.x;\n    const dy = this.y - that.y;\n\n    return Math.sqrt(dx * dx + dy * dy);\n};\n\n/**\n *  min\n *\n *  @param {Point2D} that\n *  @returns {number}\n */\nPoint2D.prototype.min = function(that) {\n    return new this.constructor(\n        Math.min(this.x, that.x),\n        Math.min(this.y, that.y)\n    );\n};\n\n/**\n *  max\n *\n *  @param {Point2D} that\n *  @returns {number}\n */\nPoint2D.prototype.max = function(that) {\n    return new this.constructor(\n        Math.max(this.x, that.x),\n        Math.max(this.y, that.y)\n    );\n};\n\n/**\n *  transform\n *\n *  @param {Matrix2D} matrix\n *  @returns {Point2D}\n */\nPoint2D.prototype.transform = function(matrix) {\n    return new this.constructor(\n        matrix.a * this.x + matrix.c * this.y + matrix.e,\n        matrix.b * this.x + matrix.d * this.y + matrix.f\n    );\n};\n\n/**\n *  toString\n *\n *  @returns {string}\n */\nPoint2D.prototype.toString = function() {\n    return \"point(\" + this.x + \",\" + this.y + \")\";\n};\n\nexport default Point2D;\n","/**\n *   Vector2D\n *\n *   @copyright 2001-2002, 2013, 2017 Kevin Lindsey\n */\n\n/**\n *  Vector2D\n *\n *  @param {number} x\n *  @param {number} y\n *  @returns {Vector2D}\n */\nfunction Vector2D(x, y) {\n    Object.defineProperties(this, {\n        x: {\n            value: x !== undefined ? x : 0.0,\n            writable: false,\n            enumerable: true,\n            configurable: false\n        },\n        y: {\n            value: y !== undefined ? y : 0.0,\n            writable: false,\n            enumerable: true,\n            configurable: false\n        }\n    });\n}\n\n/**\n *  fromPoints\n *\n *  @param {Point2D} p1\n *  @param {Point2D} p2\n *  @returns {Vector2D}\n */\nVector2D.fromPoints = function(p1, p2) {\n    return new Vector2D(\n        p2.x - p1.x,\n        p2.y - p1.y\n    );\n};\n\n/**\n *  length\n *\n *  @returns {number}\n */\nVector2D.prototype.length = function() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n};\n\n/**\n *  magnitude\n *\n *  @returns {number}\n */\nVector2D.prototype.magnitude = function() {\n    return this.x * this.x + this.y * this.y;\n};\n\n/**\n *  dot\n *\n *  @param {Vector2D} that\n *  @returns {number}\n */\nVector2D.prototype.dot = function(that) {\n    return this.x * that.x + this.y * that.y;\n};\n\n/**\n *  cross\n *\n *  @param {Vector2D} that\n *  @returns {number}\n */\nVector2D.prototype.cross = function(that) {\n    return this.x * that.y - this.y * that.x;\n};\n\n/**\n *  determinant\n *\n *  @param {Vector2D} that\n *  @returns {number}\n */\nVector2D.prototype.determinant = function(that) {\n    return this.x * that.y - this.y * that.x;\n};\n\n/**\n *  unit\n *\n *  @returns {Vector2D}\n */\nVector2D.prototype.unit = function() {\n    return this.divide(this.length());\n};\n\n/**\n *  add\n *\n *  @param {Vector2D} that\n *  @returns {Vector2D}\n */\nVector2D.prototype.add = function(that) {\n    return new this.constructor(this.x + that.x, this.y + that.y);\n};\n\n/**\n *  subtract\n *\n *  @param {Vector2D} that\n *  @returns {Vector2D}\n */\nVector2D.prototype.subtract = function(that) {\n    return new this.constructor(this.x - that.x, this.y - that.y);\n};\n\n/**\n *  multiply\n *\n *  @param {number} scalar\n *  @returns {Vector2D}\n */\nVector2D.prototype.multiply = function(scalar) {\n    return new this.constructor(this.x * scalar, this.y * scalar);\n};\n\n/**\n *  divide\n *\n *  @param {number} scalar\n *  @returns {Vector2D}\n */\nVector2D.prototype.divide = function(scalar) {\n    return new this.constructor(this.x / scalar, this.y / scalar);\n};\n\n/**\n *  angleBetween\n *\n *  @param {Vector2D} that\n *  @returns {number}\n */\nVector2D.prototype.angleBetween = function(that) {\n    let cos = this.dot(that) / (this.length() * that.length());\n    cos = Math.max(-1, Math.min(cos, 1));\n    const radians = Math.acos(cos);\n\n    return (this.cross(that) < 0.0) ? -radians : radians;\n};\n\n/**\n *  Find a vector is that is perpendicular to this vector\n *\n *  @returns {Vector2D}\n */\nVector2D.prototype.perp = function() {\n    return new this.constructor(-this.y, this.x);\n};\n\n/**\n *  Find the component of the specified vector that is perpendicular to\n *  this vector\n *\n *  @param {Vector2D} that\n *  @returns {Vector2D}\n */\nVector2D.prototype.perpendicular = function(that) {\n    return this.subtract(this.project(that));\n};\n\n/**\n *  project\n *\n *  @param {Vector2D} that\n *  @returns {Vector2D}\n */\nVector2D.prototype.project = function(that) {\n    const percent = this.dot(that) / that.dot(that);\n\n    return that.multiply(percent);\n};\n\n/**\n *  transform\n *\n *  @param {Matrix2D} matrix\n *  @returns {Vector2D}\n */\nVector2D.prototype.transform = function(matrix) {\n    return new this.constructor(\n        matrix.a * this.x + matrix.c * this.y,\n        matrix.b * this.x + matrix.d * this.y\n    );\n};\n\n/**\n *  equals\n *\n *  @param {Vector2D} that\n *  @returns {boolean}\n */\nVector2D.prototype.equals = function(that) {\n    return (\n        this.x === that.x &&\n        this.y === that.y\n    );\n};\n\n/**\n *  precisionEquals\n *\n *  @param {Vector2D} that\n *  @param {number} precision\n *  @returns {boolean}\n */\nVector2D.prototype.precisionEquals = function(that, precision) {\n    return (\n        Math.abs(this.x - that.x) < precision &&\n        Math.abs(this.y - that.y) < precision\n    );\n};\n\n/**\n *  toString\n *\n *  @returns {string}\n */\nVector2D.prototype.toString = function() {\n    return \"vector(\" + this.x + \",\" + this.y + \")\";\n};\n\nexport default Vector2D;\n","/**\n *   Matrix2D\n *\n *   @copyright 2001-2002, 2013, 2017 Kevin Lindsey\n */\n\n/**\n *  setReadonlyProperty\n *\n *  @param {Object} object\n *  @param {string} property\n *  @param {Object} value\n */\nfunction setReadonlyProperty(object, property, value) {\n    Object.defineProperty(object, property, {\n        value,\n        writable: false,\n        enumerable: true,\n        configurable: false\n    });\n}\n\n/**\n *  Identity matrix\n *\n *  @returns {Matrix2D}\n */\nsetReadonlyProperty(Matrix2D, \"IDENTITY\", new Matrix2D(1, 0, 0, 1, 0, 0));\nsetReadonlyProperty(Matrix2D.IDENTITY, \"isIdentity\", () => true);\n\n\n/**\n *  Matrix2D\n *\n *  [a c e]\n *  [b d f]\n *  [0 0 1]\n *\n *  @param {number} a\n *  @param {number} b\n *  @param {number} c\n *  @param {number} d\n *  @param {number} e\n *  @param {number} f\n *  @returns {Matrix2D}\n */\nfunction Matrix2D(a, b, c, d, e, f) {\n    setReadonlyProperty(this, \"a\", (a !== undefined) ? a : 1);\n    setReadonlyProperty(this, \"b\", (b !== undefined) ? b : 0);\n    setReadonlyProperty(this, \"c\", (c !== undefined) ? c : 0);\n    setReadonlyProperty(this, \"d\", (d !== undefined) ? d : 1);\n    setReadonlyProperty(this, \"e\", (e !== undefined) ? e : 0);\n    setReadonlyProperty(this, \"f\", (f !== undefined) ? f : 0);\n}\n\n\n// *** STATIC METHODS\n\n/**\n *  translation\n *\n *  @param {number} tx\n *  @param {number} ty\n *  @returns {Matrix2D}\n */\nMatrix2D.translation = function(tx, ty) {\n    return new Matrix2D(1, 0, 0, 1, tx, ty);\n};\n\n/**\n *  scaling\n *\n *  @param {number} scale\n *  @returns {Matrix2D}\n */\nMatrix2D.scaling = function(scale) {\n    return new Matrix2D(scale, 0, 0, scale, 0, 0);\n};\n\n/**\n *  scalingAt\n *\n *  @param {number} scale\n *  @param {Point2D} center\n *  @returns {Matrix2D}\n */\nMatrix2D.scalingAt = function(scale, center) {\n    return new Matrix2D(\n        scale,\n        0,\n        0,\n        scale,\n        center.x - center.x * scale,\n        center.y - center.y * scale\n    );\n};\n\n\n/**\n *  nonUniformScaling\n *\n *  @param {number} scaleX\n *  @param {number} scaleY\n *  @returns {Matrix2D}\n */\nMatrix2D.nonUniformScaling = function(scaleX, scaleY) {\n    return new Matrix2D(scaleX, 0, 0, scaleY, 0, 0);\n};\n\n/**\n *  nonUniformScalingAt\n *\n *  @param {number} scaleX\n *  @param {number} scaleY\n *  @param {Point2D} center\n *  @returns {Matrix2D}\n */\nMatrix2D.nonUniformScalingAt = function(scaleX, scaleY, center) {\n    return new Matrix2D(\n        scaleX,\n        0,\n        0,\n        scaleY,\n        center.x - center.x * scaleX,\n        center.y - center.y * scaleY\n    );\n};\n\n/**\n *  rotation\n *\n *  @param {number} radians\n *  @returns {Matrix2D}\n */\nMatrix2D.rotation = function(radians) {\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n\n    return new Matrix2D(c, s, -s, c, 0, 0);\n};\n\n/**\n *  rotationAt\n *\n *  @param {number} radians\n *  @param {Point2D} center\n *  @returns {Matrix2D}\n */\nMatrix2D.rotationAt = function(radians, center) {\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n\n    return new Matrix2D(\n        c,\n        s,\n        -s,\n        c,\n        center.x - center.x * c + center.y * s,\n        center.y - center.y * c - center.x * s\n    );\n};\n\n/**\n *  rotationFromVector\n *\n *  @param {Vector2D} vector\n *  @returns {Matrix2D}\n */\nMatrix2D.rotationFromVector = function(vector) {\n    const unit = vector.unit();\n    const c = unit.x; // cos\n    const s = unit.y; // sin\n\n    return new Matrix2D(c, s, -s, c, 0, 0);\n};\n\n/**\n *  xFlip\n *\n *  @returns {Matrix2D}\n */\nMatrix2D.xFlip = function() {\n    return new Matrix2D(-1, 0, 0, 1, 0, 0);\n};\n\n/**\n *  yFlip\n *\n *  @returns {Matrix2D}\n */\nMatrix2D.yFlip = function() {\n    return new Matrix2D(1, 0, 0, -1, 0, 0);\n};\n\n/**\n *  xSkew\n *\n *  @param {number} radians\n *  @returns {Matrix2D}\n */\nMatrix2D.xSkew = function(radians) {\n    const t = Math.tan(radians);\n\n    return new Matrix2D(1, 0, t, 1, 0, 0);\n};\n\n/**\n *  ySkew\n *\n *  @param {number} radians\n *  @returns {Matrix2D}\n */\nMatrix2D.ySkew = function(radians) {\n    const t = Math.tan(radians);\n\n    return new Matrix2D(1, t, 0, 1, 0, 0);\n};\n\n\n// *** METHODS\n\n/**\n *  multiply\n *\n *  @param {Matrix2D} that\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.multiply = function(that) {\n    if (this.isIdentity()) {\n        return that;\n    }\n\n    if (that.isIdentity()) {\n        return this;\n    }\n\n    return new this.constructor(\n        this.a * that.a + this.c * that.b,\n        this.b * that.a + this.d * that.b,\n        this.a * that.c + this.c * that.d,\n        this.b * that.c + this.d * that.d,\n        this.a * that.e + this.c * that.f + this.e,\n        this.b * that.e + this.d * that.f + this.f\n    );\n};\n\n/**\n *  inverse\n *\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.inverse = function() {\n    if (this.isIdentity()) {\n        return this;\n    }\n\n    const det1 = this.a * this.d - this.b * this.c;\n\n    if (det1 === 0.0) {\n        throw new Error(\"Matrix is not invertible\");\n    }\n\n    const idet = 1.0 / det1;\n    const det2 = this.f * this.c - this.e * this.d;\n    const det3 = this.e * this.b - this.f * this.a;\n\n    return new this.constructor(\n        this.d * idet,\n        -this.b * idet,\n        -this.c * idet,\n        this.a * idet,\n        det2 * idet,\n        det3 * idet\n    );\n};\n\n/**\n *  translate\n *\n *  @param {number} tx\n *  @param {number} ty\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.translate = function(tx, ty) {\n    return new this.constructor(\n        this.a,\n        this.b,\n        this.c,\n        this.d,\n        this.a * tx + this.c * ty + this.e,\n        this.b * tx + this.d * ty + this.f\n    );\n};\n\n/**\n *  scale\n *\n *  @param {number} scale\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.scale = function(scale) {\n    return new this.constructor(\n        this.a * scale,\n        this.b * scale,\n        this.c * scale,\n        this.d * scale,\n        this.e,\n        this.f\n    );\n};\n\n/**\n *  scaleAt\n *\n *  @param {number} scale\n *  @param {Point2D} center\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.scaleAt = function(scale, center) {\n    const dx = center.x - scale * center.x;\n    const dy = center.y - scale * center.y;\n\n    return new this.constructor(\n        this.a * scale,\n        this.b * scale,\n        this.c * scale,\n        this.d * scale,\n        this.a * dx + this.c * dy + this.e,\n        this.b * dx + this.d * dy + this.f\n    );\n};\n\n/**\n *  scaleNonUniform\n *\n *  @param {number} scaleX\n *  @param {number} scaleY\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.scaleNonUniform = function(scaleX, scaleY) {\n    return new this.constructor(\n        this.a * scaleX,\n        this.b * scaleX,\n        this.c * scaleY,\n        this.d * scaleY,\n        this.e,\n        this.f\n    );\n};\n\n/**\n *  scaleNonUniformAt\n *\n *  @param {number} scaleX\n *  @param {number} scaleY\n *  @param {Point2D} center\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.scaleNonUniformAt = function(scaleX, scaleY, center) {\n    const dx = center.x - scaleX * center.x;\n    const dy = center.y - scaleY * center.y;\n\n    return new this.constructor(\n        this.a * scaleX,\n        this.b * scaleX,\n        this.c * scaleY,\n        this.d * scaleY,\n        this.a * dx + this.c * dy + this.e,\n        this.b * dx + this.d * dy + this.f\n    );\n};\n\n/**\n *  rotate\n *\n *  @param {number} radians\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.rotate = function(radians) {\n    const c = Math.cos(radians);\n    const s = Math.sin(radians);\n\n    return new this.constructor(\n        this.a * c + this.c * s,\n        this.b * c + this.d * s,\n        this.a * -s + this.c * c,\n        this.b * -s + this.d * c,\n        this.e,\n        this.f\n    );\n};\n\n/**\n *  rotateAt\n *\n *  @param {number} radians\n *  @param {Point2D} center\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.rotateAt = function(radians, center) {\n    const cos = Math.cos(radians);\n    const sin = Math.sin(radians);\n    const cx = center.x;\n    const cy = center.y;\n\n    const a = this.a * cos + this.c * sin;\n    const b = this.b * cos + this.d * sin;\n    const c = this.c * cos - this.a * sin;\n    const d = this.d * cos - this.b * sin;\n\n    return new this.constructor(\n        a,\n        b,\n        c,\n        d,\n        (this.a - a) * cx + (this.c - c) * cy + this.e,\n        (this.b - b) * cx + (this.d - d) * cy + this.f\n    );\n};\n\n/**\n *  rotateFromVector\n *\n *  @param {Vector2D} vector\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.rotateFromVector = function(vector) {\n    const unit = vector.unit();\n    const c = unit.x; // cos\n    const s = unit.y; // sin\n\n    return new this.constructor(\n        this.a * c + this.c * s,\n        this.b * c + this.d * s,\n        this.a * -s + this.c * c,\n        this.b * -s + this.d * c,\n        this.e,\n        this.f\n    );\n};\n\n/**\n *  flipX\n *\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.flipX = function() {\n    return new this.constructor(\n        -this.a,\n        -this.b,\n        this.c,\n        this.d,\n        this.e,\n        this.f\n    );\n};\n\n/**\n *  flipY\n *\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.flipY = function() {\n    return new this.constructor(\n        this.a,\n        this.b,\n        -this.c,\n        -this.d,\n        this.e,\n        this.f\n    );\n};\n\n/**\n *  skewX\n *\n *  @param {number} radians\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.skewX = function(radians) {\n    const t = Math.tan(radians);\n\n    return new this.constructor(\n        this.a,\n        this.b,\n        this.c + this.a * t,\n        this.d + this.b * t,\n        this.e,\n        this.f\n    );\n};\n\n// TODO: skewXAt\n\n/**\n *  skewY\n *\n *  @param {number} radians\n *  @returns {Matrix2D}\n */\nMatrix2D.prototype.skewY = function(radians) {\n    const t = Math.tan(radians);\n\n    return new this.constructor(\n        this.a + this.c * t,\n        this.b + this.d * t,\n        this.c,\n        this.d,\n        this.e,\n        this.f\n    );\n};\n\n// TODO: skewYAt\n\n/**\n *  isIdentity\n *\n *  @returns {boolean}\n */\nMatrix2D.prototype.isIdentity = function() {\n    return (\n        this.a === 1.0 &&\n        this.b === 0.0 &&\n        this.c === 0.0 &&\n        this.d === 1.0 &&\n        this.e === 0.0 &&\n        this.f === 0.0\n    );\n};\n\n/**\n *  isInvertible\n *\n *  @returns {boolean}\n */\nMatrix2D.prototype.isInvertible = function() {\n    return this.a * this.d - this.b * this.c !== 0.0;\n};\n\n/**\n *  getScale\n *\n *  @returns {{ scaleX: number, scaleY: number }}\n */\nMatrix2D.prototype.getScale = function() {\n    return {\n        scaleX: Math.sqrt(this.a * this.a + this.c * this.c),\n        scaleY: Math.sqrt(this.b * this.b + this.d * this.d)\n    };\n};\n\n/**\n *  getDecomposition\n *\n *  Calculates matrix Singular Value Decomposition\n *\n *  The resulting matrices, translation, rotation, scale, and rotation0, return\n *  this matrix when they are muliplied together in the listed order\n *\n *  @see Jim Blinn's article {@link http://dx.doi.org/10.1109/38.486688}\n *  @see {@link http://math.stackexchange.com/questions/861674/decompose-a-2d-arbitrary-transform-into-only-scaling-and-rotation}\n *\n *  @returns {{ translation: Matrix2D, rotation: Matrix2D, scale: Matrix2D, rotation0: Matrix2D }}\n */\nMatrix2D.prototype.getDecomposition = function() {\n    const E = (this.a + this.d) * 0.5;\n    const F = (this.a - this.d) * 0.5;\n    const G = (this.b + this.c) * 0.5;\n    const H = (this.b - this.c) * 0.5;\n\n    const Q = Math.sqrt(E * E + H * H);\n    const R = Math.sqrt(F * F + G * G);\n    const scaleX = Q + R;\n    const scaleY = Q - R;\n\n    const a1 = Math.atan2(G, F);\n    const a2 = Math.atan2(H, E);\n    const theta = (a2 - a1) * 0.5;\n    const phi = (a2 + a1) * 0.5;\n\n    // TODO: Add static methods to generate translation, rotation, etc.\n    // matrices directly\n\n    return {\n        translation: new this.constructor(1, 0, 0, 1, this.e, this.f),\n        rotation: this.constructor.IDENTITY.rotate(phi),\n        scale: new this.constructor(scaleX, 0, 0, scaleY, 0, 0),\n        rotation0: this.constructor.IDENTITY.rotate(theta)\n    };\n};\n\n/**\n *  equals\n *\n *  @param {Matrix2D} that\n *  @returns {boolean}\n */\nMatrix2D.prototype.equals = function(that) {\n    return (\n        this.a === that.a &&\n        this.b === that.b &&\n        this.c === that.c &&\n        this.d === that.d &&\n        this.e === that.e &&\n        this.f === that.f\n    );\n};\n\n/**\n *  precisionEquals\n *\n *  @param {Matrix2D} that\n *  @param {number} precision\n *  @returns {boolean}\n */\nMatrix2D.prototype.precisionEquals = function(that, precision) {\n    return (\n        Math.abs(this.a - that.a) < precision &&\n        Math.abs(this.b - that.b) < precision &&\n        Math.abs(this.c - that.c) < precision &&\n        Math.abs(this.d - that.d) < precision &&\n        Math.abs(this.e - that.e) < precision &&\n        Math.abs(this.f - that.f) < precision\n    );\n};\n\n/**\n *  toString\n *\n *  @returns {string}\n */\nMatrix2D.prototype.toString = function() {\n    return \"matrix(\" + [this.a, this.b, this.c, this.d, this.e, this.f].join(\",\") + \")\";\n};\n\nexport default Matrix2D;\n"],"names":["Point2D","x","y","Object","defineProperties","this","value","undefined","writable","enumerable","configurable","Vector2D","setReadonlyProperty","object","property","defineProperty","Matrix2D","a","b","c","d","e","f","prototype","clone","constructor","add","that","subtract","multiply","scalar","divide","equals","precisionEquals","precision","Math","abs","lerp","t","omt","distanceFrom","dx","dy","sqrt","min","max","transform","matrix","toString","fromPoints","p1","p2","length","magnitude","dot","cross","determinant","unit","angleBetween","cos","radians","acos","perp","perpendicular","project","percent","IDENTITY","translation","tx","ty","scaling","scale","scalingAt","center","nonUniformScaling","scaleX","scaleY","nonUniformScalingAt","rotation","s","sin","rotationAt","rotationFromVector","vector","xFlip","yFlip","xSkew","tan","ySkew","isIdentity","inverse","det1","Error","idet","det2","det3","translate","scaleAt","scaleNonUniform","scaleNonUniformAt","rotate","rotateAt","cx","cy","rotateFromVector","flipX","flipY","skewX","skewY","isInvertible","getScale","getDecomposition","E","F","G","H","Q","R","a1","atan2","a2","theta","phi","rotation0","join"],"mappings":"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"}